{"version":3,"sources":["../../../node_modules/regenerator-runtime/runtime.js","../../assets/js/newInCarousel.js","../../assets/js/index.js"],"names":["slider_EL","document","querySelector","rightArrow_EL","leftArrow_EL","panels_EL","querySelectorAll","howManyPanels","length","counter","canSlideRight","canSlideLeft","style","color","onclick","e","forEach","panel","panelPositionProperty","window","getComputedStyle","position","Number","getPropertyValue","target","classList","contains","setAttribute","console","log","newPositionTranslate","transform","mobRightArrow_EL","mobLeftArrow_EL","parent_EL","panels","numberOfPanels","opacityController","Array","from","i","parent","indexOfTargetPanel","opacity","index","mediaQuery","matchMedia","wasMobile","addEventListener","propertyResetter","matches","translateInitialValue","overlay_EL","burger_EL","offsetWidth","toggle","sub_overlay_EL","remove","shop_EL","add","returnArrow_EL","root_EL","randoBgColors","setProperty","randomColor","colorPalette","Math","floor","random"],"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","file":"js.415763c8.js","sourceRoot":"..\\src\\en\\index","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","\r\n\r\n/* =========================\r\n NEW-IN CAROUSEL INTERACTIONS\r\n ===========================  */\r\n\r\n/* ========\r\nTable of Contents:\r\n1.  Desktop navigation\r\n2.  Mobile navigation\r\n3.  Resets\r\n============ */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* =====\r\nDesktop navigation\r\n====== */\r\n\r\nconst slider_EL = document.querySelector('.new-in__slider');\r\nconst rightArrow_EL = document.querySelector('.new-in__right');\r\nconst leftArrow_EL = document.querySelector('.new-in__left');\r\nconst panels_EL = document.querySelectorAll('.new-in__panels');\r\nconst howManyPanels = panels_EL.length;\r\n\r\n// keep record of number of clicks on right or left arrow, to determine limit after which event not triggered, due to user having reached end\r\nlet counter = 0;\r\nlet canSlideRight = true; // turns to false as user reached end of carousel, grays out arrow & disable event\r\nlet canSlideLeft = false; // by default carousel is at left end (origin) so user cannot slide left\r\n\r\n// set default greyed out left arrow\r\nleftArrow_EL.style.color = 'rgb(170, 170, 170)';\r\n\r\nslider_EL.onclick = (e) => {\r\n\r\n  panels_EL.forEach((panel) => {\r\n\r\n    // get 'position' custom inline css var\r\n    const panelPositionProperty = window.getComputedStyle(panel);\r\n    let position = Number(panelPositionProperty.getPropertyValue('--position'));\r\n\r\n    // update 'position' custom inline css var on each panel (for next click):\r\n\r\n    // -100% if click right arrow\r\n    if (e.target.classList.contains('new-in__right')) {\r\n      if (canSlideRight) { // allow event handler unless user has reached end of carousel\r\n        canSlideLeft = true; // enables sliding left next time\r\n        leftArrow_EL.style.color = '#173336'; // left arrow becomes clickable again\r\n        position -= 50;\r\n        panel.setAttribute('style', `--position:${position}`);\r\n      }\r\n      // +100% if click left arrow\r\n    } else if (e.target.classList.contains('new-in__left')) {\r\n      if (canSlideLeft) { // allow event handler unless user has reached end of carousel\r\n        canSlideRight = true; // enables sliding left next time\r\n        rightArrow_EL.style.color = '#173336'; // right arrow becomes clickable again\r\n        position += 50;\r\n        console.log('position value: ' + position);\r\n        panel.setAttribute('style', `--position:${position}`);\r\n      }\r\n\r\n    }\r\n\r\n    // perform the translation\r\n    const newPositionTranslate = `translateX(${position}%)`;\r\n    console.log(position);\r\n    panel.style.transform = newPositionTranslate;\r\n  }) // end foreach\r\n\r\n  // check if user has reached end panel:\r\n\r\n  // if reached right limit\r\n  if (e.target.classList.contains('new-in__right')) {\r\n    counter++;\r\n    console.log(`counter: ${counter}`);\r\n    if (counter >= howManyPanels - 1) {\r\n      counter = howManyPanels - 1;\r\n      canSlideRight = false;\r\n      console.log(`canSlideright set to false`);\r\n      rightArrow_EL.style.color = 'rgb(170, 170, 170)';\r\n    }\r\n  }\r\n  // if reached left limit\r\n  if (e.target.classList.contains('new-in__left')) {\r\n    counter--;\r\n    console.log(`counter: ${counter}`);\r\n    if (counter <= 0) {\r\n      counter = 0;\r\n      canSlideLeft = false;\r\n      console.log(`canSlideleft set to false`);\r\n      leftArrow_EL.style.color = 'rgb(170, 170, 170)';\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* ==========\r\n Mobile navigation \r\n ========= */\r\n\r\n/* concept: play on opacity, the parent panel always has opacity = 1, and the others by default 0. As the user clicks arrows, children panels get opacity from 0 to 1, in turn, using an array */\r\n\r\n// variables:\r\n\r\n// arrow cursors\r\nconst mobRightArrow_EL = document.querySelector('.new-in__mob-slider-right');\r\nconst mobLeftArrow_EL = document.querySelector('.new-in__mob-slider-left');\r\n\r\n// the parent element\r\nconst parent_EL = document.querySelector('.new-in__title');\r\n\r\n// the panels\r\nconst panels = document.querySelectorAll('.new-in__card-container .new-in__panels');\r\nconst numberOfPanels = panels.length;\r\nconsole.log(`no. of panels: ${numberOfPanels}`);\r\n\r\n// opacity controller for children panels, is an array with all indexes set to 0 opacity by default\r\nlet opacityController = Array.from(Array(numberOfPanels)); // for maintainability, when changing collections maybe there will be 5 panels this time if Max is very creative ;), it needs to adapt\r\n// setting default 0 values\r\nfor (let i = 0; i < opacityController.length; i++) {\r\n  opacityController[i] = 0;\r\n}\r\nconsole.log(`this is the array containing the opacity values 'opacityController', equal to ${opacityController}`);\r\n\r\n// keep record of number of clicks on right or left arrow, to determine limit after which event not triggered, due to user having reached end\r\ncounter = 0;\r\ncanSlideRight = true; // turns to false as user reached end of carousel, grays out arrow & disable event\r\ncanSlideLeft = false; // by default carousel is at left end (origin) so user cannot slide left\r\n\r\n// set default greyed out left arrow\r\nmobLeftArrow_EL.style.color = 'rgb(170, 170, 170)';\r\n\r\n\r\n// event handler\r\n\r\nparent.onclick = (e) => {\r\n  let indexOfTargetPanel = -1;\r\n\r\n  // sliding to right\r\n\r\n  if (e.target === mobRightArrow_EL) {\r\n\r\n    // allow event handler unless user has reached end of carousel\r\n    if (canSlideRight) {\r\n\r\n      canSlideLeft = true; // enables sliding left next time\r\n\r\n      // finding the index that is equal to 1 (if any, by default there is none as all children panels are 0 opacity)...\r\n      opacityController.forEach((opacity, index) => {\r\n        if (opacity === 1) {\r\n          indexOfTargetPanel = index;\r\n          console.log(`panel no. ${indexOfTargetPanel + 1} is currently visible`);\r\n        }\r\n      })\r\n\r\n      // if all indexes = 0, set the 1st panel to 1...\r\n      if (indexOfTargetPanel === -1) {\r\n        opacityController[0] = 1;\r\n        console.log(`opacityController: ${opacityController}`);\r\n\r\n        // else, set the next index to 1\r\n      } else {\r\n        opacityController[indexOfTargetPanel + 1] = 1;\r\n        console.log(`opacityController: ${opacityController}`);\r\n      }\r\n\r\n      // ...then assigning the opacity to the elements (initial i=1 to exclude the parent who always has 1 opacity)\r\n      for (let i = 1; i < panels_EL.length; i++) {\r\n        panels_EL[i].style.opacity = `${opacityController[i - 1]}`;\r\n        console.log(`panel no. ${i + 1} has opacity = ${opacityController[i - 1]}`);\r\n      }\r\n\r\n      mobLeftArrow_EL.style.color = '#173336'; // left arrow becomes clickable again\r\n\r\n      // check if user has reached end panel\r\n      counter++;\r\n      console.log(`counter: ${counter}`);\r\n      if (counter === numberOfPanels) {\r\n        canSlideRight = false;\r\n        console.log(`canSlideRight set to false`);\r\n        mobRightArrow_EL.style.color = 'rgb(170, 170, 170)';\r\n      }\r\n    }\r\n  }\r\n\r\n  // sliding to left\r\n\r\n  if (e.target === mobLeftArrow_EL) {\r\n    if (canSlideLeft) {\r\n\r\n      canSlideRight = true; // enables sliding right next time;\r\n\r\n      // finding the index that is equal to 0 if any\r\n      opacityController.forEach((opacity, index) => {\r\n        if (opacity === 0) {\r\n          indexOfTargetPanel = index;\r\n          console.log(`panel no. ${indexOfTargetPanel + 1} is currently invisible`);\r\n        }\r\n      })\r\n\r\n      // if all indexes = 1, set the last panel to 0...\r\n      if (indexOfTargetPanel === -1) {\r\n        opacityController[opacityController.length - 1] = 0;\r\n        console.log(`opacityController: ${opacityController}`);\r\n        // else, set the previous index to 0\r\n      } else {\r\n        opacityController[indexOfTargetPanel - 1] = 0;\r\n        console.log(`opacityController: ${opacityController}`);\r\n      }\r\n\r\n      // ...then assigning the opacity to the elements (initial i=1 to exclude the parent who always has 1 opacity)\r\n      for (let i = 1; i < panels_EL.length; i++) {\r\n        panels_EL[i].style.opacity = `${opacityController[i - 1]}`;\r\n        console.log(`panel no. ${i + 1} has opacity = ${opacityController[i - 1]}`);\r\n      }\r\n\r\n      mobRightArrow_EL.style.color = '#173336'; // right arrow becomes clickable again\r\n\r\n      // check if user has reached end panel\r\n      counter--;\r\n      console.log(`counter: ${counter}`);\r\n      if (counter === 0) {\r\n        canSlideLeft = false;\r\n        console.log(`canSlideLeft set to false`);\r\n        mobLeftArrow_EL.style.color = 'rgb(170, 170, 170)';\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* ====================\r\n resets when switching from desktop/mobile version \r\n ====================== */\r\n\r\n// variables\r\nconst mediaQuery = window.matchMedia('(max-width: 500px)');\r\nlet wasMobile; // below value-resets occur only if viewport was in mobile mode 1st (reverting from mobile)\r\n\r\n// listen for window resize\r\nwindow.addEventListener('resize', propertyResetter);\r\n\r\n// media query, trigger when screen below 500px\r\nfunction propertyResetter() {\r\n\r\n  // resets translates, resets carousel position to origin by resetting opacity (1st panel has 1, others have 0)\r\n  if (mediaQuery.matches) {\r\n    console.log('hello');\r\n    panels_EL.forEach((panel) => {\r\n      panel.style.transform = 'translateX(0)';\r\n      panel.style.opacity = '0';\r\n      wasMobile = true;\r\n    })\r\n    panels_EL[0].style.opacity = '1';\r\n\r\n    // counter keeps tracks of whether user has reached end of carousels (to grey out arrow and prevent further sliding)\r\n    counter = 0;\r\n  }\r\n\r\n  // reset translateX inline css & custom var --translate to initial value in case user enlarges screen again above 500px (otherwise messes up slider system panels)\r\n  if (wasMobile && !mediaQuery.matches) {\r\n    console.log('reverted to wide / panel mode');\r\n    let translateInitialValue = 0;\r\n    let position = 0;\r\n    panels_EL.forEach((panel) => {\r\n      panel.style.transform = `translateX(${translateInitialValue}%)`;\r\n      translateInitialValue += 100;\r\n      panel.setAttribute('style', `--position:${position}`);\r\n      position += 100;\r\n\r\n      // some panels have been set to 0 opacity if user had used slider on mob viewport, so they must all be visible if reverting to desktop mode\r\n      panel.style.opacity = '1';\r\n      // counter that keeps tracks of whether user has reached end of carousels (to grey out arrow and prevent further sliding)\r\n      counter = 0;\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\n","import 'regenerator-runtime/runtime' // required when using async/await with parcel\r\nimport '../css/styles.scss' // styles entry point\r\nimport './newInCarousel';\r\n\r\n/** MOBILE NAVI **/\r\n\r\n\r\n/* mobile main menu */\r\n\r\nconst overlay_EL = document.querySelector('.site-header__mobile-overlay');\r\nconst burger_EL = document.querySelector('.site-header__burger');\r\n\r\nburger_EL.addEventListener('click', () => {\r\n\r\n\r\n  // make mobile menu invisible after it is closed...\r\n  if (overlay_EL.offsetWidth != 0) {\r\n    overlay_EL.style.opacity = '0';\r\n    // ... or visible if opening\r\n  } else {\r\n    overlay_EL.style.opacity = '1';\r\n  }\r\n\r\n  // slides in\r\n  overlay_EL.classList.toggle('site-header__mobile-overlay--transition');\r\n\r\n  // burger morph infographics\r\n  burger_EL.classList.toggle('site-header__burger--transition');\r\n\r\n  // remove also the submenu, if it is active\r\n  if (sub_overlay_EL.offsetWidth != 0) {\r\n    sub_overlay_EL.classList.remove('site-header__mobile-overlay--transition');\r\n    sub_overlay_EL.style.opacity = '0';\r\n  }\r\n})\r\n\r\n\r\n\r\n\r\n/* mobile sub menu */\r\n\r\nconst sub_overlay_EL = document.querySelector('.site-header nav:nth-child(2)');\r\n// get shop (trigger)\r\nconst shop_EL = document.querySelector('#shop');\r\n\r\nshop_EL.addEventListener('click', (e) => {\r\n\r\n  // make mobile sub menu visible \r\n  sub_overlay_EL.style.opacity = '1';\r\n\r\n  // slides in\r\n  sub_overlay_EL.classList.add('site-header__mobile-overlay--transition');\r\n\r\n\r\n  // retract\r\n  // get return arrow\r\n  const returnArrow_EL = document.querySelector('.sub-menu-return');\r\n  // retract sub nav when click the arrow\r\n  returnArrow_EL.addEventListener('click', () => {\r\n    sub_overlay_EL.classList.remove('site-header__mobile-overlay--transition');\r\n    sub_overlay_EL.style.opacity = '0';\r\n  })\r\n})\r\n\r\n\r\n/* pick random hero colors // optionnal */\r\nconst root_EL = document.querySelector(':root');\r\n\r\n// window.onload = randoBgColors();\r\n\r\nfunction randoBgColors() {\r\n  root_EL.style.setProperty('--colorHeaderBg1', randomColor());\r\n  root_EL.style.setProperty('--colorHeaderBg2', randomColor());\r\n  root_EL.style.setProperty('--colorHeaderBg3', randomColor());\r\n  root_EL.style.setProperty('--colorHeaderBg4', randomColor());\r\n}\r\n\r\nfunction randomColor() {\r\n  const colorPalette = ['#014d57', '#068596', '#7c1785', '#1963ed'];\r\n  const index = Math.floor(Math.random() * colorPalette.length);\r\n  console.log('index of colorPalette returned: ' + index);\r\n  return colorPalette[index];\r\n}\r\n"]}